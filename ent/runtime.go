// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Frosin/shoplist-api-client-go/ent/item"
	"github.com/Frosin/shoplist-api-client-go/ent/schema"
	"github.com/Frosin/shoplist-api-client-go/ent/shop"
	"github.com/Frosin/shoplist-api-client-go/ent/shopping"
	"github.com/Frosin/shoplist-api-client-go/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescProductName is the schema descriptor for product_name field.
	itemDescProductName := itemFields[0].Descriptor()
	// item.ProductNameValidator is a validator for the "product_name" field. It is called by the builders before save.
	item.ProductNameValidator = itemDescProductName.Validators[0].(func(string) error)
	// itemDescQuantity is the schema descriptor for quantity field.
	itemDescQuantity := itemFields[1].Descriptor()
	// item.DefaultQuantity holds the default value on creation for the quantity field.
	item.DefaultQuantity = itemDescQuantity.Default.(int)
	// itemDescCategoryID is the schema descriptor for category_id field.
	itemDescCategoryID := itemFields[2].Descriptor()
	// item.DefaultCategoryID holds the default value on creation for the category_id field.
	item.DefaultCategoryID = itemDescCategoryID.Default.(int)
	// itemDescComplete is the schema descriptor for complete field.
	itemDescComplete := itemFields[3].Descriptor()
	// item.DefaultComplete holds the default value on creation for the complete field.
	item.DefaultComplete = itemDescComplete.Default.(bool)
	shopFields := schema.Shop{}.Fields()
	_ = shopFields
	// shopDescName is the schema descriptor for name field.
	shopDescName := shopFields[0].Descriptor()
	// shop.NameValidator is a validator for the "name" field. It is called by the builders before save.
	shop.NameValidator = shopDescName.Validators[0].(func(string) error)
	shoppingFields := schema.Shopping{}.Fields()
	_ = shoppingFields
	// shoppingDescDate is the schema descriptor for date field.
	shoppingDescDate := shoppingFields[0].Descriptor()
	// shopping.DefaultDate holds the default value on creation for the date field.
	shopping.DefaultDate = shoppingDescDate.Default.(func() time.Time)
	// shoppingDescSum is the schema descriptor for sum field.
	shoppingDescSum := shoppingFields[1].Descriptor()
	// shopping.DefaultSum holds the default value on creation for the sum field.
	shopping.DefaultSum = shoppingDescSum.Default.(int)
	// shoppingDescComplete is the schema descriptor for complete field.
	shoppingDescComplete := shoppingFields[2].Descriptor()
	// shopping.DefaultComplete holds the default value on creation for the complete field.
	shopping.DefaultComplete = shoppingDescComplete.Default.(bool)
	// shoppingDescType is the schema descriptor for type field.
	shoppingDescType := shoppingFields[3].Descriptor()
	// shopping.DefaultType holds the default value on creation for the type field.
	shopping.DefaultType = shoppingDescType.Default.(int)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescComunityID is the schema descriptor for comunity_id field.
	userDescComunityID := userFields[2].Descriptor()
	// user.ComunityIDValidator is a validator for the "comunity_id" field. It is called by the builders before save.
	user.ComunityIDValidator = userDescComunityID.Validators[0].(func(string) error)
	// userDescToken is the schema descriptor for token field.
	userDescToken := userFields[3].Descriptor()
	// user.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	user.TokenValidator = userDescToken.Validators[0].(func(string) error)
}
